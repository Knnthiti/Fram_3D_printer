import cv2
import time
from ultralytics import YOLO

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• YOLO
model = YOLO("best.pt")

# ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏≤‡∏™ (‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö classes ‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏Ñ‡∏∏‡∏ì)
class_names = ["normal print", "printer head", "spaghettis"]

normal_print = 0
printer_head = 0
spaghettis = 0


def run_detection():
    # ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á (0 ‡∏´‡∏£‡∏∑‡∏≠ 1 ‡∏ï‡∏≤‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ)
    cap = cv2.VideoCapture(0)

    if not cap.isOpened():
        print("Unable to open camera")
        return

    # ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏ü‡∏£‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    ret, frame = cap.read()
    if ret:
        # ‡∏£‡∏±‡∏ô YOLO ‡∏ö‡∏ô‡πÄ‡∏ü‡∏£‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
        results = model(frame)

        # ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö
        detections = results[0].boxes
        classes = detections.cls.tolist()  # index ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠

        # ‚úÖ ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏•‡∏≤‡∏™
        counts = {name: 0 for name in class_names}
        for cls_id in classes:
            cls_name = class_names[int(cls_id)]
            counts[cls_name] += 1

        # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        # print("üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö:", counts)

        # ‡πÅ‡∏°‡∏õ‡πÄ‡∏õ‡πá‡∏ô uint8_t (‡πÉ‡∏ä‡πâ numpy.uint8)
        normal_print = counts["normal print"]
        printer_head = counts["printer head"]
        spaghettis = counts["spaghettis"]

        print("normal_print =", normal_print)
        print("printer_head =", printer_head)
        print("spaghettis   =", spaghettis)

        # ‡∏ß‡∏≤‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        # annotated_frame = results[0].plot()

        # # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
        # cv2.imshow("YOLO Detection", annotated_frame)
        # cv2.waitKey(2000)  # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        # cv2.destroyAllWindows()

    cap.release()


# üìå ‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å‡πÜ 60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
while True:
    print("photos with a camera")
    run_detection()

    print("... wait 60 s ...")
    time.sleep(60)
