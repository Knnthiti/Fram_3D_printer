import cv2
import os
from ultralytics import YOLO

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡πÄ‡∏≠‡∏á
model = YOLO("best.pt")

# ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå input ‡πÅ‡∏•‡∏∞ output
input_dir = "image"
output_dir = "output_results"
os.makedirs(output_dir, exist_ok=True)

# confidence threshold
CONF_THRESHOLD = 0.5

# loop ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
for fname in os.listdir(input_dir):
    fpath = os.path.join(input_dir, fname)

    # ‡∏Ç‡πâ‡∏≤‡∏°‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ
    if not fname.lower().endswith((".jpg", ".jpeg", ".png")):
        continue

    img = cv2.imread(fpath)
    if img is None:
        print(f"‚ùå ‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏π‡∏õ {fname} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ")
        continue

    # ‡∏£‡∏±‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•
    results = model(img)[0]

    # ‡∏ß‡∏≤‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    for box in results.boxes:
        conf = float(box.conf)
        if conf < CONF_THRESHOLD:
            continue

        x1, y1, x2, y2 = map(int, box.xyxy[0])
        cls_id = int(box.cls[0])
        label = model.names[cls_id]
        color = (0, 255, 0)  # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß

        # ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≠‡∏ö
        cv2.rectangle(img, (x1, y1), (x2, y2), color, 2)

        # ‡πÉ‡∏™‡πà label + confidence
        text = f"{label} {conf:.2f}"
        cv2.putText(img, text, (x1, y1 - 10),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.6, color, 2)

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    out_path = os.path.join(output_dir, fname)
    cv2.imwrite(out_path, img)
    print(f"‚úÖ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß: {out_path}")

print("üéØ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ‚Äî ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå output_results")
